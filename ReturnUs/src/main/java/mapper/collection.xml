<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.collection">

	<insert id="insertCollect" parameterType="dto.Collection">
			INSERT INTO collection (col_num, acc_id, col_date, col_status, col_addr,
									col_post, col_use_pnt, col_price,
									col_paper, col_pt_body, col_pt_lid, col_bt_190, col_bt_400, col_bt_1000, col_bt_1000_up,
									col_ppack, col_plastic, col_can, col_total_pnt)
			VALUES (CONCAT(DATE_FORMAT(CURDATE(), '%Y%m%d'), '-', LPAD(NEXT VALUE FOR colNum, 4, '0')), #{accId},CURDATE(),'수거준비중',#{colAddr},
					#{colPost},#{colUsePnt},#{colPrice},
					#{colPaper},#{colPtBody},#{colPtLid},#{colBt190},#{colBt400},#{colBt1000},#{colBt1000Up},
					#{colPpack},#{colPlastic},#{colCan},#{colTotalPnt})
	</insert>

	<select id="selectCollectionList" parameterType="Map" resultType="Map">
		select col.col_num as colNum, col.acc_id as accId, acc.ACC_NAME AS accName, col.col_date as colDate, col.col_addr as colAddr, 
				col.col_status as colStatus, col.col_post as colPost, col.col_use_pnt as colUsePnt, col.col_price as colPrice, col.col_result as colResult, 
				col.col_getpnt_dt as colGetpntDt, col.col_paper as colPaper, col.col_pt_body as colPtBody, col.col_pt_lid as colPtLid, 
				col.col_bt_190 as colBt190, col.col_bt_400 as colBt400, col.col_bt_1000 as colBt1000, col.col_bt_1000_Up as colBt1000Up, 
				col.col_ppack as colPpack, col.col_plastic as colPlastic, col.col_can as colCan, col.col_total_pnt as colTotalPnt
		from collection col LEFT  JOIN account acc ON col.ACC_ID = acc.ACC_ID
		where col.col_status = #{colStatus}
		order by col.col_num DESC
		limit #{row}, 10
	</select>
	
	<select id="selectCollectionCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*)
		FROM collection
		WHERE col_status = #{colStatus}
	</select>
	
	<select id="selectCollectionDetail" parameterType="String" resultType="Map">
		SELECT col.col_num as colNum, col.acc_id as addId, acc.ACC_NAME AS accName, acc.ACC_TEL AS accTel, col.col_date as colDate, col.col_addr as colAddr, 
				col.col_status as colStatus, col.col_post as colPost, col.col_use_pnt as colUsePnt, col.col_price as colPrice, col.col_result as colResult, 
				col.col_getpnt_dt as colGetpntDt, col.col_paper as colPaper, col.col_pt_body as colPtBody, col.col_pt_lid as colPtLid, 
				col.col_bt_190 as colBt190, col.col_bt_400 as colBt400, col.col_bt_1000 as colBt1000, col.col_bt_1000_Up as colBt1000Up, 
				col.col_ppack as colPpack, col.col_plastic as colPlastic, col.col_can as colCan, col.col_total_pnt as colTotalPnt, col.col_rejection as colRejection,
				col.col_paper_fin as colPaperFin, col.col_pt_body_fin as colPtBodyFin, col.col_pt_lid_fin as colPtLidFin, col.col_bt_190_fin as colBt190Fin,
				col.col_bt_400_fin as colBt400Fin, col.col_bt_1000_fin as colBt1000Fin, col.col_bt_1000_Up_fin as colBt1000UpFin,
				col.col_ppack_fin as colPpackFin, col.col_plastic_fin as colPlasticFin, col.col_can_fin as colCanFin
		FROM collection col LEFT JOIN account acc ON col.ACC_ID = acc.ACC_ID
		WHERE col.col_num = #{colNum}
	</select>
	
	<update id="updateColStatus" parameterType="Map">
		update collection 
		set col_status = #{colStatus}
		where col_num = #{colNum}
	</update>
	
	
	<update id="updateCollectionFin" parameterType="dto.Collection">
		UPDATE collection
		SET col_status = #{colStatus}, col_result = #{colResult}, col_getpnt_dt = curdate(), col_paper_fin=#{colPaperFin},
			col_pt_body_fin=#{colPtBodyFin}, col_pt_lid_fin=#{colPtLidFin}, col_bt_190_fin=#{colBt190Fin}, col_bt_400_fin=#{colBt400Fin},
			col_bt_1000_fin=#{colBt1000Fin}, col_bt_1000_Up_fin=#{colBt1000UpFin}, col_ppack_fin=#{colPpackFin}, 
			col_plastic_fin=#{colPlasticFin}, col_can_fin=#{colCanFin}, col_total_pnt = #{colTotalPnt}, col_rejection = #{colRejection}
		WHERE col_num = #{colNum}
	</update>
	
	<select id="selectCollectionListById" parameterType="Map" resultType="Map">
		select col_num as colNum, col_date as colDate, col_addr as colAddr, col_status as colStatus, col_result as colResult				
		from collection
		where acc_id = #{accId}
		order by col_num desc
		limit #{row}, 10
	</select>
	
	<select id="selectCollectionCountByIdInPreparation" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId} and col_status = "수거준비중"
	</select>
	
	<select id="selectCollectionCountByIdInProgress" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId} and col_status = "수거진행중"
	</select>
	
	<select id="selectCollectionCountByIdFinished" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId} and col_status = "수거완료"
	</select>
	
	<select id="selectCollectionListForPoint" parameterType="Map" resultType="Map">
		select col_num as colNum, col_date as colDate, col_use_pnt as colUsePnt, col_getpnt_dt as colGetpntDt, col_total_pnt as colTotalPnt				
		from collection
		where acc_id = #{accId}
		order by col_num desc
		limit #{row}, 10
	</select>
	
	<select id="selectCollectionListForUsingPoint" parameterType="Map" resultType="Map">
		select col_num as colNum, col_date as colDate, col_use_pnt as colUsePnt				
		from collection
		where acc_id = #{accId} and (col_use_pnt is not null)
		order by col_num desc
		limit #{row}, 10
	</select>
	
	<select id="selectCollectionListForGettingPoint" parameterType="Map" resultType="Map">
		select col_num as colNum, col_getpnt_dt as colGetpntDt, col_total_pnt as colTotalPnt				
		from collection
		where acc_id = #{accId} and (col_total_pnt is not null)
		order by col_num desc
		limit #{row}, 10
	</select>
	
	<select id="selectCollectionCountForPoint" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId}
	</select>
	
	<select id="selectCollectionCountForUsingPoint" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId} and (col_use_pnt != 0)
	</select>
	
	<select id="selectCollectionCountForGettingPoint" parameterType="String" resultType="Integer">
		select count(col_num) from collection where acc_id = #{accId} and (col_total_pnt != 0)
	</select>
	
	<select id="selectCollection" parameterType="String" resultType="dto.Collection">
		select col_num as colNum, acc_id as accId, col_date as colDate, col_addr as colAddr, 
				col_status as colStatus, col_post as colPost, col_use_pnt as colUsePnt, col_price as colPrice, col_result as colResult, 
				col_getpnt_dt as colGetpntDt, col_paper as colPaper, col_pt_body as colPtBody, col_pt_lid as colPtLid, 
				col_bt_190 as colBt190, col_bt_400 as colBt400, col_bt_1000 as colBt1000, col_bt_1000_Up as colBt1000Up, 
				col_ppack as colPpack, col_plastic as colPlastic, col_can as colCan, col_total_pnt as colTotalPnt, col_rejection as colRejection,
				col_paper_fin as colPaperFin, col_pt_body_fin as colPtBodyFin, col_pt_lid_fin as colPtLidFin, col_bt_190_fin as colBt190Fin,
				col_bt_400_fin as colBt400Fin, col_bt_1000_fin as colBt1000Fin, col_bt_1000_Up_fin as colBt1000UpFin,
				col_ppack_fin as colPpackFin, col_plastic_fin as colPlasticFin, col_can_fin as colCanFin
			from collection where col_num = #{colNum}
	</select>
	
	<update id="updateCollectionItemQuantity" parameterType="dto.Collection">
		UPDATE collection
		SET col_paper = #{colPaper}, col_pt_body=#{colPtBody}, col_pt_lid=#{colPtLid}, col_bt_190=#{colBt190},
			col_bt_400=#{colBt400}, col_bt_1000=#{colBt1000}, col_bt_1000_Up=#{colBt1000Up}, col_ppack=#{colPpack}, 
			col_plastic=#{colPlastic}, col_can=#{colCan}, col_total_pnt = #{colTotalPnt}
		WHERE col_num = #{colNum}
	</update>

	<update id="updateColPmNo" parameterType="Map">
		UPDATE collection
		SET col_pm_no = #{colPmNo}
		WHERE col_num = #{colNum}
	</update>

</mapper>